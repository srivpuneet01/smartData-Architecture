@model Core.Domain.Patient

@section CSSLinks
{

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapGrid/src/bootstrap-table.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapDailog/bootstrap-dialog.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/datepicker.css" rel="stylesheet" />
}
@section JSRefernces
{

    <script src="~/Scripts/JqGrid/jquery-1.11.0.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/bootstrap-table.js"></script>
    <script src="~/Scripts/BootStrapDailog/bootstrap-dialog.min.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/extensions/filter/bootstrap-table-filter.js"></script>
@System.Web.Optimization.Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script>
        //var startTime = (new Date()).getTime();
        //$(window).load(function () {
        //    var endTime = (new Date()).getTime();
        //    var millisecondsLoading = endTime - startTime;
        //   // alert(millisecondsLoading);
        //    // Put millisecondsLoading in a hidden form field
        //    // or Ajax it back to the server or whatever.
        //});
        var form;

        $(document).ready(function () {
            //Page Permission
            $("#HiddenHostName").val(window.location.origin);
          //  CheckPermission();
              
           
            //end
            $('#dp1').datepicker({
                format: 'mm/dd/yyyy',
                buttonImageOnly: true,
                showOn: "both",
                buttonImage: 'images/graphics/calendar.png'
            });
            $('#dp2').datepicker({
                format: 'mm/dd/yyyy',
                enddate: '+0d',
                autoclose: true
            });
            $('#dp3').datepicker({
                format: 'mm/dd/yyyy'
            });
            
            $('#dp1').datepicker().on('changeDate', function (ev) {
                $('.datepicker').hide();
                //$(this).datepicker('hide');
            });
            $('#dp2').datepicker().on('changeDate', function (ev) {
                $('.datepicker').hide();
            });
            $('#dp3').datepicker().on('changeDate', function (ev) {
                $('.datepicker').hide();
            });

          

            @functions{
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
         }
            // Antiforgery Token
            var token = '@TokenHeaderValue()';
            var headers = {};
            headers["RequestVerificationToken"] = token;

            //$("#btnCreate").click(function () {
            //    window.location.href = "/Patients/Patients/Create";
            //});
            var Param = {};
            var $table = $("#grid");
            $("#btnFilter").click(function () {
                var fullname = $("#FullName").val();
                var socialsecurityno = $("#SocialSecurityNo").val();
                var homeaddress = $("#HomeAddress").val();
                var phone = $("#Phone").val();

                Param.clickBtn = true;
                form = $('#EditForm');
                if (fullname != "") {
                    Param.FullName = fullname;
                }
                else {
                    Param.FullName = "";
                }
                if (socialsecurityno != "") {
                    Param.SocialSecurityNo = socialsecurityno;
                }
                else {
                    Param.SocialSecurityNo = "";
                }
                if (homeaddress != "") {
                    Param.HomeAddress = homeaddress;
                }
                else {
                    Param.HomeAddress = "";
                }
                if (phone != "") {
                    Param.Phone = phone;
                }
                else {
                    Param.Phone = "";
                }
                $table.bootstrapTable('refresh');
                Param.clickBtn = false;
            });

            $("#EditForm").on("submit", function (event) {
                mycustomsubmit(event);
            });

            $("#btnUpdate").on("click", function (event) {
                UpdatePatient(event);
            });

            function UpdatePatient(e) {
                $('#loadingmessage').show();
                e.preventDefault();
                form = $('#FormID');
                $.ajax({
                    cache: false,
                    async: true,
                    type: "POST",
                    url: $("#HiddenHostName").val()+ "/Patients/Patients/EditPatient",
                    data: form.serialize(),
                    success: function (data) {
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Your Record is successfully updated.');
                        $('#loadingmessage').hide();
                        $("#myModal").modal('hide');
                        RefreshGrid();
                       
                    },
                    error: function (request, error) {
                        if (request.statusText == "CustomMessage") {
                            $("#spanError").html(request.responseText)
                            $('#loadingmessage').hide();
                        }
                    },
                    headers: headers,

                });
                return false;
            }


            var reqUrl = $("#HiddenHostName").val() + '/api/PatientsAPI/GetPatients';

            $('#grid').bootstrapTable({
                headers: headers,
                method: 'post',
                url: reqUrl,
                cache: true,
                height: 500,
                classes: 'table table-hover',
                customParams: Param,
                striped: true,
                pageNumber: 1,
                pagination: true,
                pageSize: 10,
                pageList: [5, 10, 20, 30],
                search: false,
                showColumns: true,
                showRefresh: true,
                sidePagination: 'server',
                minimumCountColumns: 2,
                showHeader: true,
                showFilter: false,
                smartDisplay: true,
                clickToSelect: true,
                rowStyle: rowStyle,
                toolbar: '#custom-toolbar',
                columns: [
               
                        {
                        field: 'FullName',
                        title: 'Name',
                        checkbox: false,
                        type: 'search',
                        sortable: true,
                    }, {
                        field: 'DateOfBirth',
                        title: 'Date of Birth',
                        type: 'search',
                        formatter: DateFormatter,
                        sortable: true,
                    }, {
                        field: 'SocialSecurityNo',
                        title: 'Social Security No.',
                        type: 'search',

                        sortable: true,
                    },
                {
                    field: 'HomeAddress',
                    title: 'Home Address',
                    type: 'search',

                    sortable: true,
                },
                {
                    field: 'Phone',
                    title: 'Phone No.',
                    type: 'search',

                    sortable: true,
                },
                {
                    field: 'operate',
                    title: 'Actions',


                    clickToSelect: false,
                    formatter: operateFormatter,
                    events: operateEvents
                }],
                onSubmit: function () {
                    var data = $('#filter-bar').bootstrapTableFilter('getData');
                    console.log(data);
                },
                onLoadSuccess: function () {
                    Addtitle();
                },
                onPageChange: function () {
                    Addtitle();
                }
            });

            $("#FirstName").on("keydown", function (e) {
                return e.which !== 32;
            });
            $("#LastName").on("keydown", function (e) {
                return e.which !== 32;
            });
            $("#MiddleName").on("keydown", function (e) {
                return e.which !== 32;
            });

        });

        function Addtitle() {
            $('.page-next').attr('Title', 'Next');
            $('.page-first').attr('Title', 'First');
            $('.page-last').attr('Title', 'Last');
            $('.page-pre').attr('Title', 'Previous');
        }
        function DateFormatter(value, row, index) {
            return [
             row.DateOfBirth = new Date(row.DateOfBirth).toLocaleDateString()
            ].join('');
        }

        // Edit and Delete Formattte links
        function operateFormatter(value, row, index) {
            return [
                '<a id="edit"  class="edit ml10 isAllowEdit" href="javascript:void(0)" title="Edit">',
                    '<i class="glyphicon glyphicon-edit"></i>',
                '</a>&nbsp;&nbsp;',
                '<a id="delete" class="remove ml10 isAllowDelete" href="javascript:void(0)" title="Remove">',
                    '<i class="glyphicon glyphicon-remove"></i>',
                '</a>'
            ].join('');
        }

        // Link Events Edit and Delete
        window.operateEvents = {
            'click .edit': function (e, value, row, index) {
                $('#loadingmessage').show();
                $.ajax({

                    url: $("#HiddenHostName").val() + "/Patients/Patients/Edit",
                    data: row,
                    type: "GET",
                    success: function (data) {
                        $("#modalid").html(data);
                        $("#myModal").modal('show');
                        $('#loadingmessage').hide();
                    },
                    error: function () {
                        $('#loadingmessage').hide();
                    }
                    ,
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    }
                });
            },
            'click .remove': function (e, value, row, index) {
                BootstrapDialog.show({
                    title: 'Confirmation',
                    message: 'Are you sure you want to delete this record?',
                    buttons: [{
                        label: 'Yes',
                        cssClass: 'btn-primary',
                        action: function (dialogItself) {
                            $.ajax({
                                cache: false,
                                async: false,
                                type: "POST",
                                url: $("#HiddenHostName").val() + "/api/PatientsAPI/DeletePatient/" + row.PatientId,
                                success: function (data) {
                                    if (data == true) {
                                        RefreshGrid();
                                        dialogItself.close();
                                    }
                                    else {
                                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                                    }
                                },
                                error: function (request, error) {
                                    if (request.statusText == "CustomMessage") {
                                        $("#spanError").html(request.responseText)
                                    }
                                },
                                headers: {
                                    'RequestVerificationToken': '@TokenHeaderValue()'
                                }
                            });
                        }
                    }, {
                        label: 'No',
                        cssClass: 'btn-danger',
                        action: function (dialogItself) {
                            dialogItself.close();
                        }
                    }]
                });

            }
        };

        function rowStyle(row, index) {
            var classes = ['active', 'success', 'info', 'warning', 'danger'];

            if (index % 2 === 0) {
                return {
                    classes: classes[1]
                };
            }
            return {};
        }

        var $table = $("#grid");
        var chk = false;
        function RefreshGrid() {
            document.getElementById("btnFilter").click();
        }

        function ShowMessage(type, message) {
            $messageData = $("<span>Information</span>");
            BootstrapDialog.show({
                title: $messageData,
                type: type,
                message: message,
                closable: true,
                closeByBackdrop: false,
                closeByKeyboard: false,
                buttons: [{
                    label: 'Ok',
                    action: function (dialogItself) {
                        dialogItself.close();
                    }
                }]
            });
        }
        function AddNew() {
            //  window.location.href = "/Patients/Patients/Create";
            //  $("hdtext").text("Add Role");
           // $("#AddModal").modal('show');
            //window.location.href = "/Patients/Patients/Create";
             $("#AddModal").modal('show');
        }

        //Close Popup
        function  ClosePopup()
        {
            $("#AddModal").modal('hide');
        }
        //End
        function LoadSuccess() {
            //$("#btnMassUpdate").show();
            //$("#ddlactivate").show();
            CheckPermission();
        }

        function CheckPermission()
        {
            $.ajax({
                type: "post",
                url: "/Patients/Patients/GetAccessPermissionList",
                data: '{Screen: "Patients" }',
                //  data: null,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {

                        $.each(data, function (i, item) {
                            //if(item.ActionType=="1")
                            //{

                            //}
                         
                            if (item.IsAllowPermission == "0") {
                                $(".btnAdd").addClass("hideButton");
                            }

                            if (item.ActionType == "2") {
                                $(".btnAdd").addClass("showButton");
                            }
                            if (item.ActionType == "3") {
                                //setTimeout(function () {
                                //    //  $(".isAllowEdit").removeClass("hideButton");
                                //    $(".isAllowEdit").addClass("showButton");
                                //}, 3500);
                                $(".isAllowEdit").addClass("showButton");
                            }

                            if (item.ActionType == "4") {
                                //setTimeout(function () {
                                //    //   $("#btnMassUpdate").addClass("hidden");
                                //    // $(".isAllowEdit").removeClass("hideButton");
                                //    $(".isAllowDelete").addClass("showButton");
                                //}, 3500);
                                $(".isAllowDelete").addClass("showButton");
                            }

                            if (item.ActionType == "5") {
                                if (item.ActionName == "Export") {
                                    $("#ButtonExport").addClass("showButton");
                                }
                                if (item.ActionName == "Print") {

                                    $("#ButtonPrint").addClass("showButton");
                                }
                            }
                            if (item.IsAllowPermission == "1") {
                                $(".isAllow").addClass("showButton");
                                $(".isAllowEdit").addClass("showButton");
                                $(".btnAdd").addClass("showButton");
                                $(".isAllowDelete").addClass("showButton");
                            }

                        });
                    }
                    else {

                    }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }
    </script>

}


<style>
    .row {
        margin-bottom: 10px;
    }

    .col-sm-4 {
        text-align: right;
    }
</style>
<style>
    .hideButton {
        display: none;
    }

    .showButton {
        display: inline-block;
    }
</style>
<form id="dd">
    @Html.AntiForgeryToken()
    <div style="height:40px;width:100%"><h3>Patients</h3></div>
    <div id="custom-toolbar">
        <div class="form-inline" role="form">

                <div class="form-group">
                    <div class="search">
                        <input class="form-control" id="FullName" placeholder="Name" type="text" name="FullName">
                    </div>
                </div>

                <div class="form-group">
                    <div class="search">
                        <input class="form-control" id="SocialSecurityNo" placeholder="Social Security No." type="text" name="SocialSecurityNo">
                    </div>
                </div>

                <div class="form-group">
                    <div class="search">
                        <input class="form-control" id="HomeAddress" placeholder="Home Address" type="email" name="HomeAddress">
                    </div>
                </div>
                <div class="form-group">
                    <div class="search">
                        <input class="form-control" id="Phone" placeholder="Phone No." type="text" name="Phone">
                    </div>
                </div>
                <div class="form-group">
                    <input class="btn btn-success" id="btnFilter" placeholder="" type="button" value="Filter" name="btnFilter">
                </div>
                @*<div class="form-group">
                <input class="btn btn-success" id="btnCreate" placeholder="" type="button" value="Create New">
            </div>*@
            </div>
    </div>
    <div id="filter-bar"> </div>
    <table class="table table-hover" data-url='@ViewBag.TempUrl' data-toolbar="#post" data-show-columns="true" data-show-filter="true" data-click-to-select="true"
           id="grid">
        <thead>
            <tr>

                <th data-field="PatientId">Patient ID</th>
                <th data-field="FullName">Name</th>
                <th data-field="DateOfBirth" data-dateformat="YYYY-MM-DD">Date of Birth</th>
                <th data-field="SocialSecurityNo">Social Security No.</th>
                <th data-field="HomeAddress">Home Address</th>
                <th data-field="Phone">Phone</th>
                @*<th data-field="Operate"></th>*@
            </tr>
        </thead>
    </table>
</form>
<div id="myModal" class="modal fade">
    <div style="width:70%;" class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h2 class="modal-title">Edit Patient</h2>
            </div>
            <form id="FormID">
                @Html.AntiForgeryToken();
                <div class="modal-body">
                    <div id="modalid"></div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnUpdate" value="Update" class="btn btn-success" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                </div>
            </form>
        </div>
    </div>
</div>
<div id="AddModal" class="modal fade">
    <div class="modal-dialog" style="width:70%">
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
                @Html.Partial("_AddPatient", Model);
            </div>
        </div>
    </div>
</div>
<div id='loadingmessage' class="loader1 fade1" style="display: none; z-index: 5000; height: 95%; width: 90%; margin-left: 4%; ">
    <img src='~/Areas/ScreenPermissions/Images/loading2.gif' style="height: 50px;width: 50px;" />
</div>
<style>
    .loader1 {
        position: absolute;
        top: 8%;
        left: 5%;
        width: 400px;
        height: 200px;
        padding: 30px 15px 0px;
        border: 3px solid #ababab;
        box-shadow: 1px 1px 10px #ababab;
        border-radius: 20px;
        background-color: white;
        z-index: 3002;
        text-align: center;
        overflow: auto;
    }

    .fade1 {
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: #ababab;
        z-index: 1001;
        -moz-opacity: 0.8;
        opacity: .70;
        filter: alpha(opacity=80);
    }

   
</style>

