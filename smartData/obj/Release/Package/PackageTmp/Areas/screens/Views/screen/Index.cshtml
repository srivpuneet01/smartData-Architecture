@{
    Layout = "~/Areas/screens/Views/Shared/_Layout.cshtml";
}
@section CSSLinks
{
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapGrid/src/bootstrap-table.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapDailog/bootstrap-dialog.min.css" rel="stylesheet" />
}
@section JSRefernces
{
    <script src="~/Scripts/JqGrid/jquery-1.11.0.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/bootstrap-table.js"></script>
    <script src="~/Scripts/BootStrapDailog/bootstrap-dialog.min.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/extensions/filter/bootstrap-table-filter.js"></script>
}
<script>
    var form;
    function Addtitle() {
        $('.page-next').attr('Title', 'Next');
        $('.page-first').attr('Title', 'First');
        $('.page-last').attr('Title', 'Last');
        $('.page-pre').attr('Title', 'Previous');
    }
    $(document).ready(function () {
        $("#HiddenHostName").val(window.location.origin);
        //$("#btnAdd").click(function () {
        //    //  window.location.href = "/Patients/Patients/Create";
        //    //  $("hdtext").text("Add Role");
        //    $("#AddModal").modal('show');
           
        //});
        //$("input#ScreenName").on({
        //    keydown: function (e) {
        //        if (e.which === 32)
        //            return false;
        //    },
        //    change: function () {
        //        this.value = this.value.replace(/\s/g, "");
        //    }
        //});

        
        //$("input#txtscreenName").on({
        //    keydown: function (e) {
        //        if (e.which === 32)
        //            return false;
        //    },
        //    change: function () {
        //        this.value = this.value.replace(/\s/g, "");
        //    }
        //});

        $("#ScreenName").keyup(function () {
            var count = $(this).val().length;
            var text = $(this).val();
            if(count>50)
            {
                var text1 = text.substring(0, 50);
                $(this).val(text1);
            }

        });

        
        $("#txtActionName").keyup(function () {
            var count = $(this).val().length;
            var text = $(this).val();
            if (count > 50) {
                var text1 = text.substring(0, 50);
                $(this).val(text1);
            }

        });

        @functions{
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
         }
        // Antiforgery Token
        var token = '@TokenHeaderValue()';
        var headers = {};
        headers["RequestVerificationToken"] = token;

        // Set Custom filters for searching : Model Property name and search TxtBox Id names must be same
        var Param = {};
        //Param.FirstName = $("#FirstName").val();
        //Param.LastName = $("#LastName").val();
        //Param.Email = $("#Email").val();
        //form = $('#EditForm');
        $("#btnFilter").click(function () {
            var screenname = $("#screenName").val();
            var active = $("#Active").val();
            //  var email = $("#Email").val();
           // alert(rolename);
            Param.clickBtn = true;
            form = $('#EditForm');
            if (screenname != "") {
                Param.screenName = screenname;
            }
            else {
                Param.screenName = "";
            }
            //if (Active != "") {
            //    Param.Active = active;
            //}
            //else {
            //    Param.Active = "";
            //}
            // if(email!="")
            //{
            //    Param.Email = email;
            //}
            // else {
            //     Param.Email = "";
            // }
            $('#grid').bootstrapTable('filterBy');
            Param.clickBtn = false;
        });
        $("#EditForm").on("submit", function (event) {
            if ($("#txtscreenName").val().trim() == "") {
                BootstrapDialog.alert("Please Enter Screen Name");
                $('#loadingmessage').hide();
                return false;
            }
            mycustomsubmit(event);
        });
        form = $('#EditForm');
        function mycustomsubmit(e) {
            $('#loadingmessage').show();

            if ($("#ModuleId").val().trim() == "Select Module") {
                $("#ModuleId").focus();
                BootstrapDialog.alert("Please Select Module Name");
                $('#loadingmessage').hide();
                return false;
            }

            e.preventDefault();
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: $("#HiddenHostName").val() + "/api/screenAPI/Editscreen",
                data: $('#EditForm').serialize(),//form.serialize(),
                success: function (data) {
                    RefreshGrid();
    if(data == 'true'){
        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Your Record is successfully updated.');
    }
    else {
        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Sorry Duplicate Records exists.');
}
                    $("#myModal").modal('hide');
                    $('#loadingmessage').hide();
                    //}
                    //else {
                    //    ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                    //}
                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });

           
        }

        var reqUrl = $("#HiddenHostName").val() + '/api/screenAPI/GetScreens';
        //alert("Call");
        $('#grid').bootstrapTable({
            headers: headers,
            method: 'post',
            url: reqUrl,
            cache: false,
            height: 500,
            classes: 'table table-hover',
            customParams: Param,
            striped: true,
            pageNumber: 1,
            pagination: true,
            pageSize: 10,
            pageList: [5, 10, 20, 30],
            search: false,
            showColumns: true,
            showRefresh: true,
            sidePagination: 'server',
            minimumCountColumns: 2,
            showHeader: true,
            showFilter: false,
            smartDisplay: true,
            clickToSelect: true,
            rowStyle: rowStyle,
            toolbar: '#custom-toolbar',
            columns: [
                //{
                //field: 'screenId',
                //title: 'Screen ID',
                //type: 'search',

                //sortable: true
                //},
            {
                field: 'ScreenName',
                title: 'Screen',
                type: 'search',
                sortable: true,
            },
            //{
            //    field: 'LastName',
            //    title: 'Last Name',
            //    type: 'search',

            //    sortable: true,
            //}, {
            //    field: 'Email',
            //    title: 'Email',
            //    type: 'search',

            //    sortable: true,
                //},
            {
                field: 'operate',
                title: 'Actions',


                clickToSelect: false,
                formatter: operateFormatter,
                events: operateEvents
            }],
            
            onSubmit: function () {
                var data = $('#filter-bar').bootstrapTableFilter('getData');
                console.log(data);
            },
            onLoadSuccess: function () {
                Addtitle();
            },
            onPageChange: function () {
                Addtitle();
            }
        });
        
    });

    // Edit and Delete Formattte links
    function operateFormatter(value, row, index) {
        return [
            '<a id="edit"  class="edit ml10" href="javascript:void(0)" title="Edit">',
                '<i class="glyphicon glyphicon-edit"></i>',
            '</a>&nbsp;&nbsp;',
            '<a id="delete" class="remove ml10" href="javascript:void(0)" title="Remove">',
                '<i class="glyphicon glyphicon-remove"></i>',
            '</a>&nbsp;&nbsp;',
            '<a id="AddAction" href="javascript:showScreenAction(row.screenId)" class="AddAction ml10"  title="Add Action">',
               
                '<img src="/1431806156_list-add-user.png" style="width: 20px; height: 20px;" />',
            '</a>'
        ].join('');
    }

    // Link Events Edit and Delete
    window.operateEvents = {
        'click .edit': function (e, value, row, index) {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Users/Users/IsUserPermitedtoDelete",
                success: function (data) {                        
                    if(data==true)
                    {  
            //ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Record deleted successfully.');
           // alert(row.ModuleId);
            $("#myModal").modal('show');
            $("#screenId").val(row.screenId);
            $("#showscreenId").text(row.screenId);
            $("#txtscreenName").val(row.ScreenName);
            $("#ModuleId").val(row.ModuleId);
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Sorry, only Super Admin can edit this user!');
                        RefreshGrid();
                    }
                },
                error: function (request) {
                },
            })
        },

        'click .AddAction': function (e, value, row, index) {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Users/Users/IsUserPermitedtoDelete",
                success: function (data) {                        
                    if(data==true)
                    {  

            $(".CreateSAction").css("display", "inline-block");
            $(".EditSAction").css("display", "none");
            //$("#txtActionName").val("");
            $("#ActionType").val(0);
            $("#FK_screenId").val(row.screenId);
            $("#ActionHeading").text(row.ScreenName+"   "+ "Action");
            
            $("#AddActionModel").modal('show');
            BindGrid(row.screenId);
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Sorry, only Super Admin can add action for this user!');
                        RefreshGrid();
                    }
                },
                error: function (request) {
                },
            })

        },

        'click .remove': function (e, value, row, index) {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Users/Users/IsUserPermitedtoDelete",
                success: function (data) {                        
                    if(data==true)
                    {  
            BootstrapDialog.show({
                title: 'Confirmation',
                message: 'Are you sure you want to delete this record?',
                buttons: [{
                    label: 'Yes',
                    cssClass: 'btn-primary',
                    action: function (dialogItself) {
                        $.ajax({
                            cache: false,
                            async: false,
                            type: "POST",
                            url: $("#HiddenHostName").val() + "/api/screenAPI/Deletescreen/" + row.screenId,
                            success: function (data) {
                                if (data == true) {
                                    RefreshGrid();
                                    dialogItself.close();
                                }
                                else {
                                    ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                                }
                            },
                            error: function (request, error) {
                                if (request.statusText == "CustomMessage") {
                                    $("#spanError").html(request.responseText)
                                }
                            },
                            headers: {
                                'RequestVerificationToken': '@TokenHeaderValue()'
                            }
                        });
                    }
                }, {
                    label: 'No',
                    cssClass: 'btn-danger',
                    action: function (dialogItself) {
                        dialogItself.close();
                    }
                }]
            });
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Sorry, only Super Admin can delete this user!');
                        RefreshGrid();
                    }
                },
                error: function (request) {
                },
            })
        }
    };

    function rowStyle(row, index) {
        var classes = ['active', 'success', 'info', 'warning', 'danger'];

        if (index % 2 === 0) {
            return {
                classes: classes[1]
            };
        }
        return {};
    }
    function showScreenAction(src)
    {
        alert(src);
      //  $("#AddActionModel").modal('show');
    }

    function RefreshGrid() {
        $('#grid').bootstrapTable('refresh', { silent: true });
    }

    //BootstrapDialog.TYPE_DEFAULT,
    //BootstrapDialog.TYPE_INFO,
    //BootstrapDialog.TYPE_PRIMARY,
    //BootstrapDialog.TYPE_SUCCESS,
    //BootstrapDialog.TYPE_WARNING,
    //BootstrapDialog.TYPE_DANGER
    function ShowMessage(type, message) {
        $messageData = $("<span>Information12344</span>");
        BootstrapDialog.show({
            title: $messageData,
            type: type,
            message: message,
            closable: true,
            closeByBackdrop: false,
            closeByKeyboard: false,
            buttons: [{
                label: 'Ok',
                action: function (dialogItself) {
                    dialogItself.close();

                }
            }]
        });
    }
 
   
    function AddNew() {
        //  window.location.href = "/Patients/Patients/Create";
        //  $("hdtext").text("Add Role");
      
       
        $("#AddModal").modal('show');
        $(form).focus_first();
        $("#ScreenName").val('');

    }

    function LoadSuccess() {
        //$("#btnMassUpdate").show();
        //$("#ddlactivate").show();
    }

  
</script>
<style>
    .row {
        margin-bottom: 10px;
    }

    .col-sm-4 {
        text-align: right;
    }
    .modal-dialog {
        padding-top: 5%;
    }
</style>
<div style="height:40px;width:100%"><h3>Screen</h3></div>
<div id="custom-toolbar">
    <div class="form-inline" role="form">
        <div class="form-group">
           
        </div>
        <div class="form-group">
            <div class="search">
                <input class="form-control" id="screenName" placeholder="screen Name" type="text" name="screenName">
            </div>
        </div>

        <div class="form-group">

            <input class="btn btn-success" id="btnFilter" placeholder="" type="button" value="Filter" name="btnFilter">
        </div>

        <div class="form-group">



            @*<input class="btn btnAdd btn-success" id="btnAdd" placeholder="" type="button" value="Add" name="btnAdd">*@



        </div>

    </div>
</div>




<div id="filter-bar"> </div>
<table class="table table-hover" data-toolbar="#custom-toolbar" data-show-columns="true" data-show-filter="true"
       id="grid">
    <thead>
        <tr>
            <th data-field="ScreenId">Screen ID</th>
            <th data-field="ScreenName">Screen Name</th>

        </tr>
    </thead>
</table>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">
                    Update Screen
                </h4>
            </div>
            @*@Html.BeginForm("Create", "Users")*@
            <form id="EditForm">
                <div class="modal-body">
                    <div class="row" style="display:none;">
                        <div class="col-sm-4">
                            Screen Id
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="screenId" readonly id="screenId" style="display:none;" />
                            <span id="showscreenId">

                            </span>
                            @*<input id="RoleId" name="RoleId" type="hidden" />*@
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            Screen
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="screenName" id="txtscreenName" maxlength="50" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            Module
                        </div>
                        <div class="col-sm-8">
                           
                            @*@Html.DropDownList("ddlModule", ViewBag.moduleList as SelectList)*@
                            @Html.DropDownList("ModuleId", (IEnumerable<SelectListItem>)ViewBag.moduleList,"Select Module")
                            @*<select id="ddlModule">
                                <option value="1">Admin</option>
                                <option value="2">User</option>
                                <option value="3">Patient</option>
                                
                            </select>*@ 
                        </div>
                    </div>


                </div>

                <div class="modal-footer">
                    <button type="submit" id="userUpdate" class="btn btn-primary">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                    <input id="ModifiedBy" type="text" name="ModifiedBy" value="@ViewBag.logUser" style="display:none;" />
                </div>
            </form>
        </div>
    </div>
</div>

<div id="AddModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                @Html.Partial("_NewScreen")
            </div>
        </div>
    </div>
</div>

<div id="AddActionModel" class="modal fade AddActionModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                @Html.Partial("_ScreenAction")

            </div>
        </div>
    </div>
</div>
<script>
    // Focus first element
    $.fn.focus_first = function () {
        var elem = $('input:visible', this).get(0);
        var select = $('select:visible', this).get(0);
        if (select && elem) {
            if (select.offsetTop < elem.offsetTop) {
                elem = select;
            }
        }
        var textarea = $('textarea:visible', this).get(0);
        if (textarea && elem) {
            if (textarea.offsetTop < elem.offsetTop) {
                elem = textarea;
            }
        }

        if (elem) {
            elem.focus();
        }
        return this;
    }
    //$(window).load(function () {
    //    //alert("hi");

    //});
</script>
<div id='loadingmessage' class="loader1 fade1" style="display: none; z-index: 5000; height: 95%; width: 90%; margin-left: 4%; ">
    <img src='~/Areas/ScreenPermissions/Images/loading2.gif' style="height: 50px;width: 50px;" />
</div>
<style>
    .loader1 {
        position: absolute;
        top: 8%;
        left: 5%;
        width: 400px;
        height: 200px;
        padding: 30px 15px 0px;
        border: 3px solid #ababab;
        box-shadow: 1px 1px 10px #ababab;
        border-radius: 20px;
        background-color: white;
        z-index: 3002;
        text-align: center;
        overflow: auto;
    }

    .fade1 {
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: #ababab;
        z-index: 1001;
        -moz-opacity: 0.8;
        opacity: .70;
        filter: alpha(opacity=80);
    }

    .hideRow {
        display: none;
    }

    .modal-dialog {
        padding-top: 5%;
    }
</style>