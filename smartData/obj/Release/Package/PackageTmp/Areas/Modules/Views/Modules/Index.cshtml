
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Roles/Views/Shared/_Layout.cshtml";
}

@section CSSLinks
{
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapGrid/src/bootstrap-table.css" rel="stylesheet" />
    <link href="~/Scripts/BootStrapDailog/bootstrap-dialog.min.css" rel="stylesheet" />
}
@section JSRefernces
{
    <script src="~/Scripts/JqGrid/jquery-1.11.0.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/bootstrap-table.js"></script>
    <script src="~/Scripts/BootStrapDailog/bootstrap-dialog.min.js"></script>
    <script src="~/Scripts/BootStrapGrid/src/extensions/filter/bootstrap-table-filter.js"></script>
}
<script>
    var form;
    function Addtitle() {
        $('.page-next').attr('Title', 'Next');
        $('.page-first').attr('Title', 'First');
        $('.page-last').attr('Title', 'Last');
        $('.page-pre').attr('Title', 'Previous');
    }
    $(document).ready(function () {
        $("#HiddenHostName").val(window.location.origin);
        $("#btnMassUpdate").css("display","none")

        $("#btnMassUpdate").hide();
        $("#hiddenMassUpdate").val("");
        $("#hiddenMassUpdateUncheck").val("");



        //$("#btnAdd").click(function () {
        //    //  window.location.href = "/Patients/Patients/Create";
        //    //  $("hdtext").text("Add Role");
        //   // $("#AddModal").modal('show');
        //});

        @functions{
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
         }
        // Antiforgery Token
        var token = '@TokenHeaderValue()';
        var headers = {};
        headers["RequestVerificationToken"] = token;

        // Set Custom filters for searching : Model Property name and search TxtBox Id names must be same
        var Param = {};
        //Param.FirstName = $("#FirstName").val();
        //Param.LastName = $("#LastName").val();
        //Param.Email = $("#Email").val();
        //form = $('#EditForm');
        $("#btnFilter").click(function () {
            var ModuleName = $("#ModuleName").val();
           // var active = $("#Active").val();
            //  var email = $("#Email").val();
           // alert(rolename);
            Param.clickBtn = true;
            form = $('#EditForm');
            if (ModuleName != "") {
                Param.ModuleName = ModuleName;
            }
            else {
                Param.ModuleName = "";
            }
            
            // if(email!="")
            //{
            //    Param.Email = email;
            //}
            // else {
            //     Param.Email = "";
            // }
            $('#grid').bootstrapTable('filterBy');
            Param.clickBtn = false;
        });
        //rfersh
        $("#btnRefresh").click(function () {
            $("#ModuleName").val('');
            var ModuleName = $("#ModuleName").val();
            // var active = $("#Active").val();
            //  var email = $("#Email").val();
            // alert(rolename);
            Param.clickBtn = true;
            form = $('#EditForm');
            if (ModuleName != "") {
                Param.ModuleName = ModuleName;
            }
            else {
                Param.ModuleName = "";
            }

            // if(email!="")
            //{
            //    Param.Email = email;
            //}
            // else {
            //     Param.Email = "";
            // }
            $('#grid').bootstrapTable('filterBy');
            Param.clickBtn = false;
        });
        //end refresh
        $("#EditForm").on("submit", function (event) {
            if ($("#txtModuleName").val().trim() == "")
            {
                BootstrapDialog.alert("Please Enter Module");
                return false;
            }
            $('#loadingmessage').show();
            mycustomsubmit(event);
        });
        form = $('#EditForm');
        function mycustomsubmit(e) {
            e.preventDefault();
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: $("#HiddenHostName").val ()+ "/api/ModuleAPI/EditModule",
                data: $('#EditForm').serialize(),//form.serialize(),
                success: function (data) {

                    RefreshGrid();
                    ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Your Record is successfully updated.');
                    $("#myModal").modal('hide');
                    $('#loadingmessage').hide();
                    //}
                    //else {
                    //    ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                    //}
                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });

            @*var user = {};
            user.UserId = $("#userId").val();
            user.FirstName = $("#txtFirstName").val();
            user.LastName = $("#txtLastName").val();
            user.Email = $("#txtEmail").val();
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "http://localhost:55038/api/UsersAPI/EditUser",
                data: { 'user': user },
                success: function (data) {
                    if (data == true) {
                        RefreshGrid();
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Your Record is successfully updated.');
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                    }
                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });*@
        }

        var reqUrl = $("#HiddenHostName").val ()+ '/api/ModuleAPI/GetAllModules';
        //alert("Call");
        $('#grid').bootstrapTable({
            headers: headers,
            method: 'post',
            url: reqUrl,
            cache: false,
            height: 500,
            classes: 'table table-hover',
            customParams: Param,
            striped: true,
            pageNumber: 1,
            pagination: true,
            pageSize: 10,
            pageList: [5, 10, 20, 30],
            search: false,
            showColumns: true,
            showRefresh: true,
            sidePagination: 'server',
            minimumCountColumns: 2,
            showHeader: true,
            showFilter: false,
            smartDisplay: true,
            clickToSelect: true,
            rowStyle: rowStyle,
            toolbar: '#custom-toolbar',
            columns: [
        

              

            {
                field: 'ModuleName',
                title: 'Module Name',
                type: 'search',
                sortable: true,
            },
            //{
            //    field: 'LastName',
            //    title: 'Last Name',
            //    type: 'search',

            //    sortable: true,
            //}, {
            //    field: 'Email',
            //    title: 'Email',
            //    type: 'search',

            //    sortable: true,
                //},
            {
                field: 'operate',
                title: 'Actions',


                clickToSelect: false,
                formatter: operateFormatter,
                events: operateEvents
            }],
            //filters: [
            //    {
            //        field: 'FirstName',    // field identifier
            //        label: 'First Name',    // filter label
            //        type: 'search',
            //        enabled: true   // filter type
            //    },
            //    {
            //        field: 'LastName',
            //        label: 'Last Name',
            //        type: 'search',
            //        enabled: true   // filter is visible by default
            //    },
            //    {
            //        field: 'Email',
            //        label: 'Email',
            //        type: 'search',
            //        enabled: true
            //    },

            //],
            onSubmit: function () {
                var data = $('#filter-bar').bootstrapTableFilter('getData');
                console.log(data);
            },
            onLoadSuccess: function () {
                Addtitle();
            },
            onPageChange: function () {
                Addtitle();
            }
        });
        //$('#filter-bar').bootstrapTableFilter({
        //    filters: [
        //        {
        //            field: 'FirstName',    // field identifier
        //            label: 'First Name',    // filter label
        //            type: 'search',
        //            enabled: true   // filter type
        //        },
        //        {
        //            field: 'LastName',
        //            label: 'Last Name',
        //            type: 'search',
        //            enabled: true   // filter is visible by default
        //        },
        //        {
        //            field: 'Email',
        //            label: 'Email',
        //            type: 'search',
        //            enabled: true
        //        },

        //    ],
        //    onSubmit: function () {
        //        var data = $('#filter-bar').bootstrapTableFilter('getData');
        //        console.log(data);
        //    }
        //});
    });

    // Edit and Delete Formattte links
    function operateFormatter(value, row, index) {
        return [
            '<a id="edit"  class="edit ml10" href="javascript:void(0)" title="Edit">',
                '<i class="glyphicon glyphicon-edit"></i>',
            '</a>&nbsp;&nbsp;',
            '<a id="delete" class="remove ml10" href="javascript:void(0)" title="Remove">',
                '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
        ].join('');
    }

    // Link Events Edit and Delete
    window.operateEvents = {       
        'click .edit': function (e, value, row, index) {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Users/Users/IsUserPermitedtoDelete",
                success: function (data) {                        
                    if(data==true)
                    {  
            //ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Record deleted successfully.');
            //alert(row.RoleId);
            $("#myModal").modal('show');
            $("#ModuleID").val(row.ModuleID);
         //   $("#showRoleID").text(row.RoleId);
            $("#txtModuleName").val(row.ModuleName);
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Sorry, only Super Admin can edit this user!');
                        RefreshGrid();
                    }
                },
                error: function (request) {
                },
            })
        },

        //

        'click .chkItem': function (e, value, row, index) {
            //ShowMessage(BootstrapDialog.TYPE_SUCCESS, 'Record deleted successfully.');
            alert(row.RoleId);
            //$("#myModal").modal('show');
            //$("#RoleId").val(row.RoleId);
            //$("#showRoleID").text(row.RoleId);
            //$("#txtRoleName").val(row.RoleName);

            var prop = row.Active;

            $('#Active').prop('checked', prop);

        },

        'click .remove': function (e, value, row, index) {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Users/Users/IsUserPermitedtoDelete",
                success: function (data) {                        
                    if(data==true)
                    {  
            BootstrapDialog.show({title: 'Confirmation',
                message: 'Are you sure you want to delete this record?',
                buttons: [{
                    label: 'Yes',
                    cssClass: 'btn-primary',
                    action: function (dialogItself) {
                        $.ajax({
                            cache: false,
                            async: false,
                            type: "POST",
                            url: $("#HiddenHostName").val()+ "/api/ModuleAPI/DeleteModule/" + row.ModuleID,
                            success: function (data) {
                                if (data == true) {
                                    RefreshGrid();
                                    dialogItself.close();
                                }
                                else {
                                    dialogItself.close();
                                    ShowMessage(BootstrapDialog.TYPE_DANGER, 'You do not have permissions to delete this module.');
                                }
                            },
                            error: function (request, error) {
                                if (request.statusText == "CustomMessage") {
                                    $("#spanError").html(request.responseText)
                                }
                            },
                            headers: {
                                'RequestVerificationToken': '@TokenHeaderValue()'
                            }
                        });
                    }
                }, {
                    label: 'No',
                    cssClass: 'btn-danger',
                    action: function (dialogItself) {
                        dialogItself.close();
                    }
                }]
            });
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_DANGER, 'Sorry, only Super Admin can delete this user!');
                        RefreshGrid();
                    }
                },
                error: function (request) {
                },
            })
        }
    };

    function rowStyle(row, index) {
        var classes = ['active', 'success', 'info', 'warning', 'danger'];

        if (index % 2 === 0) {
            return {
                classes: classes[1]
            };
        }
        return {};
    }

    function RefreshGrid() {
        $('#grid').bootstrapTable('refresh', { silent: true });
    }

    //BootstrapDialog.TYPE_DEFAULT,
    //BootstrapDialog.TYPE_INFO,
    //BootstrapDialog.TYPE_PRIMARY,
    //BootstrapDialog.TYPE_SUCCESS,
    //BootstrapDialog.TYPE_WARNING,
    //BootstrapDialog.TYPE_DANGER
    function ShowMessage(type, message) {
        $messageData = $("<span>Information</span>");
        BootstrapDialog.show({
            title: $messageData,
            type: type,
            message: message,
            closable: true,
            closeByBackdrop: false,
            closeByKeyboard: false,
            buttons: [{
                label: 'Ok',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }]
        });
    }

    function selectval(src) {

        //alert($(src).parent().next().text());
        Selectcheckbox(src, $(src).parent().next().text());
    }

    function stateFormatter(value, row, index) {
        alert(row.RoleId);
        if (index === 2) {
            return {
                disabled: true
            };
        }
        if (index === 5) {
            return {
                disabled: true,
                checked: true
            }
        }
        return value;
    }

  

   
   

   
    function LoadSuccess() {
       // $("#btnMassUpdate").show();
      //  $("#ddlactivate").show();
        $(".bootstrap-table").addClass("mrg");
        $('#loadingmessage').hide();
    }

    function AddNew()
    {
        $("#AddModal").modal('show');
        $(".rname #ModuleName").val("");
    }
</script>
<style>
    .mrg {
        margin-left: 8%;
        margin-right: 8%;
    }
</style>
<div style="height:40px;width:100%"><h3>Modules</h3></div>
<div id="custom-toolbar">
    <div class="form-inline" role="form">
        <div class="form-group">
            <div class="search">
                <input class="form-control" id="ModuleName" placeholder="Module Name" type="text" name="ModuleName">
            </div>
        </div>




        <div class="form-group">

            <input class="btn btn-success" id="btnFilter" placeholder="" type="button" value="Filter" name="btnFilter">
        </div>
        <div class="form-group">

            <input class="btn btn-success" id="btnRefresh" placeholder="" type="button" value="Refresh" name="btnRefresh">
        </div>
        <div class="form-group">      



        </div>


    </div>
</div>
<div id="filter-bar"> </div>
<table class="table table-hover" data-toolbar="#custom-toolbar" 
       id="grid">
    <thead>
        <tr>
          
            <th data-field="ModuleID">Module ID</th>
            <th data-field="ModuleName">Role Name</th>

        </tr>
    </thead>
</table>

<div id="AddModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                @Html.Partial("_AddModule")
               
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">
                    Update Module
                </h4>
            </div>
            <form id="EditForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-4">
                           
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="ModuleID" readonly id="ModuleID" style="display:none;" />
                            <span id="showRoleID">

                            </span>
                            @*<input id="RoleId" name="RoleId" type="hidden" />*@
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            Module
                        </div>
                        <div class="col-sm-8">
                            <input type="text" name="ModuleName" id="txtModuleName"  maxlength="50"/>
                        </div>
                    </div>
                    


                </div>

                <div class="modal-footer">
                    <button type="submit" id="userUpdate" class="btn btn-primary">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input id="ModifiedBy" type="text" name="ModifiedBy" value="@ViewBag.logUser" style="display:none;" />
                </div>
            </form>
        </div>
    </div>
</div>
<div id='loadingmessage' class="loader1 fade1" style="display: none; z-index: 5000; height: 95%; width: 90%; margin-left: 4%; ">
    <img src='~/Areas/ScreenPermissions/Images/loading2.gif' style="height: 50px;width: 50px;" />
</div>
<style>
    .loader1 {
        position: absolute;
        top: 8%;
        left: 5%;
        width: 400px;
        height: 200px;
        padding: 30px 15px 0px;
        border: 3px solid #ababab;
        box-shadow: 1px 1px 10px #ababab;
        border-radius: 20px;
        background-color: white;
        z-index: 3002;
        text-align: center;
        overflow: auto;
    }

    .fade1 {
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: #ababab;
        z-index: 1001;
        -moz-opacity: 0.8;
        opacity: .70;
        filter: alpha(opacity=80);
    }

    .hideRow {
        display: none;
    }

    .modal-dialog {
        padding-top: 5%;
    }
</style>

