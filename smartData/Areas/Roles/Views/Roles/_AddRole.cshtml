@model Core.Domain.Roles

@using (Html.BeginForm("create", "Roles", FormMethod.Post, new { id = "FormID" }))
{
    @Html.AntiForgeryToken()
    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }

        public string UserListingURL()
        {
            return @Url.Action("Index", "Roles");
        }
    }
    <div id="testid"></div>
    <div class="form-horizontal">
        <h4>Add Role</h4>
        <hr />
        @Html.ValidationSummary()
        <span id="spanError"></span>
        <div class="form-group rname" id="rname">
            @Html.Label("Role", new { @class = "control-label col-md-2", @required = "required", @autofocus = "autofocus" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2", Style = "margin-top:-6px" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Active)
                <input id="CreatedBy" type="text" name="CreatedBy" value="@ViewBag.logUser" style="display:none;" />
            </div>
        </div>
        <div class="modal-footer">
            <div class="col-md-12">
                <input type="button" value="Create" onclick="mycustomsubmit(event);" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}

<script>
    var form;
    $(function () {
        form = $('#FormID');
    })
    function mycustomsubmit(e) {
        $('#loadingmessage').show();
        {
            if ($(".rname #RoleName").val() == "") {
                $(".rname #RoleName").focus();
                $('#loadingmessage').hide();
                return;
            }
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "@Url.Action("Create", "Roles", "Roles")",
                data: form.serialize(),
                success: function (data) {
                    if (data.ResponseStatus) {

                        $("#AddModal").modal('hide');
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, data.ResponseText);
                        RefreshGrid();
                        $(".rname #RoleName").val('');
                        $('#loadingmessage').hide();
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, data.ResponseText);
                        $('#loadingmessage').hide();
                    }
                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });
       }
    }
    function ShowMessage(type, message) {
        $messageData = $("<span>Information</span>");
        BootstrapDialog.show({
            title: $messageData,
            type: type,
            message: message,
            closable: true,
            closeByBackdrop: false,
            closeByKeyboard: false,
            buttons: [{
                label: 'Ok',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }]
        });
    }
</script>

@section JSRefernces
{
    @System.Web.Optimization.Scripts.Render("~/bundles/jqueryval")
    <script>
        $("input[type=text]").first().focus();
        var form;
        $(document).ready(function () {
            form = $('#FormID');
            $("#FormID").on("submit", function (event) {
                alert("fm");
                if ($("#rname #RoleName").val() == "")
                {
                    alert("hello");
                    $("#rname #RoleName").focus();
                    return;
                }
                mycustomsubmit(event);
            });
        });
        function mycustomsubmit(e) {
            if (form.valid()) {
                $.ajax({
                    cache: false,
                    async: true,
                    type: "POST",
                    url: "@Url.Action("Create", "Roles", "Roles")",
                    data: form.serialize(),
                    success: function (data) {
                        if (data == true) {
                            $("#spanError").html("");
                            window.location = '@UserListingURL()'
                        }
                        else {
                            ShowMessage(BootstrapDialog.TYPE_DANGER, 'Error occured.');
                        }
                    },
                    error: function (request, error) {
                        if (request.statusText == "CustomMessage") {
                            $("#spanError").html(request.responseText)
                        }
                    },
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    }
                });
            }
        }
        function ShowMessage(type, message) {
            $messageData = $("<span>Information</span>");
            BootstrapDialog.show({
                title: $messageData,
                type: type,
                message: message,
                closable: true,
                closeByBackdrop: false,
                closeByKeyboard: false,
                buttons: [{
                    label: 'Ok',
                    action: function (dialogItself) {
                        dialogItself.close();
                    }
                }]
            });
        }
    </script>
}


