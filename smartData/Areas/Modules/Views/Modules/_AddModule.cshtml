
@model Core.Domain.Module

@System.Web.Optimization.Scripts.Render("~/bundles/jqueryvalidate")
@using (Html.BeginForm("create", "Roles", FormMethod.Post, new { id = "FormID" }))
{
    @Html.AntiForgeryToken()

    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }

        public string UserListingURL()
        {
            return @Url.Action("Index", "Roles");
        }
    }
    
    <div id="testid"></div>
    <div class="form-horizontal">
        <h4>Add Module</h4>
        <hr />
        @Html.ValidationSummary()
        <span id="spanError"></span>
        <div class="form-group rname" id="rname">
            @Html.Label("Module", new { @class = "control-label col-md-2", @required = "required" })
          
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleName, new { @maxlength = 50 })
                @Html.ValidationMessageFor(model => model.ModuleName )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" onclick="mycustomsubmit(event);" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section JSRefernces
{
    @System.Web.Optimization.Scripts.Render("~/bundles/jqueryval")

}
@System.Web.Optimization.Scripts.Render("~/scripts/js/module.js")


