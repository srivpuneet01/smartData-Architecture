@model Core.Domain.Screen
@using (Html.BeginForm("create", "screen", FormMethod.Post, new { id = "FormID" }))
{
    @Html.AntiForgeryToken()

    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }

        public string UserListingURL()
        {
            return @Url.Action("Index", "screen");
        }
    }



    <div id="testid"></div>
<div class="form-horizontal">
    <h4>Add Screen</h4>
    <hr />

    <span id="spanError"></span>
    <div class="form-group addS">
        @Html.LabelFor(model => model.ScreenName, new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScreenName, new {@maxlength = "50" })
               
            </div>
    </div>

    <div class="form-group addS">

        <label class="control-label col-md-2" for="Module">Module</label>

        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ModuleId, new SelectList(Model.ModuleList, "Value", "Text"), "Select Module")
                
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <input id="CreatedBy" type="text" name="CreatedBy" value="@ViewBag.logUser" style="display: none;" />
            <input type="button" value="Create" onclick="mycustomsubmit(event);" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script>
    var form;
    $(function () {
        form = $('#FormID');

    })
    function mycustomsubmit(e) {
        if ($(".addS #ScreenName").val() == "") {
            //alert("test1");
            $(".addS #ScreenName").focus();
            return;
        }

        if ($(".addS #ScreenName").val().trim() == "") {
            //  alert("hello");
            $(".addS #ScreenName").focus();
            BootstrapDialog.alert("Please Enter Screen Name");
            $('#loadingmessage').hide();
            return false;
        }

        e.preventDefault();
        //  if (form.valid())
        {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("Create", "Screen", "Screens")',
                data: form.serialize(),
                success: function (data) {
                    if (data.ResponseStatus) {
                        $("#AddModal").modal('hide');
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, data.ResponseText);
                        RefreshGrid();
                    }
                    else {
                        ShowMessage(BootstrapDialog.TYPE_SUCCESS, data.ResponseText);
                        $("#ScreenName").val('');

                    }

                },
                error: function (request, error) {
                    if (request.statusText == "CustomMessage") {
                        $("#spanError").html(request.responseText)
                    }
                },
                headers: {
                    'RequestVerificationToken': '@TokenHeaderValue()'
                }
            });
        }
    }
</script>

@section JSRefernces
{
    @System.Web.Optimization.Scripts.Render("~/bundles/jqueryvalidate")

<script>
    var form;
    $(document).ready(function () {
        form = $('#FormID');
        $("#FormID").on("submit", function (event) {
            if ($(".addS #ScreenName").val() == "") {
                $(".addS #ScreenName").focus();
                return;
            }
            mycustomsubmit(event);
        });
    });
</script>

@System.Web.Optimization.Scripts.Render("~/scritps/js/screens.js")
}
